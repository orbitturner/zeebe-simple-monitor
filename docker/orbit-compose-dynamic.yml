services:
  zeebe:
    container_name: zeebe-broker-hazelcast-${PROJECT_STAGE}
    image: ghcr.io/camunda-community-hub/zeebe-with-hazelcast-exporter:8.2.0
    environment:
      - ZEEBE_LOG_LEVEL=debug
      - ZEEBE_HAZELCAST_CLUSTER_NAME=dev
    ports:
      - "${ZEEBE_PORT_BROKER}:26500"
      - "${ZEEBE_PORT_API}:9600"
      - "${ZEEBE_PORT_HAZELCAST}:5701"
    networks:
      - zeebe_network
    labels:
      - traefik.docker.network=zeebe_network
    volumes:
      - ./hazelcast/application.yaml:/usr/local/zeebe/config/application.yaml
    profiles:
      - hazelcast

  simple-monitor-postgres:
    container_name: zeebe-simple-monitor-postgres-${PROJECT_STAGE}
    image: ghcr.io/camunda-community-hub/zeebe-simple-monitor:2.5.2
    environment:
      - zeebe.client.broker.gateway-address=${SERVER_HOST}:${ZEEBE_PORT_BROKER}
      - zeebe.client.worker.hazelcast.connection=${SERVER_HOST}:${ZEEBE_PORT_HAZELCAST}
      - zeebe.client.worker.hazelcast.clusterName=dev
      - spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/postgres
      - spring.datasource.username=postgres
      - spring.datasource.password=${POSTGRES_PASSWORD}
      - spring.datasource.driverClassName=org.postgresql.Driver
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
    ports:
      - "${MONITOR_PORT}:8082"
    depends_on:
      - zeebe
      - postgres-zeebe-simple-monitor
    networks:
      - zeebe_network
    labels:
      - traefik.docker.network=zeebe_network_${PROJECT_STAGE}
    profiles:
      - hazelcast_postgres

  postgres-zeebe-simple-monitor:
    image: postgres:16.1
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres-zeebe-simple-monitor-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - zeebe_network
    profiles:
      - postgres

volumes:
  postgres-zeebe-simple-monitor-data:
    driver: local
  mysql-zeebe-simple-monitor-data:
    driver: local

# networks:
#   default:
#     name: zeebe_network${PROJECT_STAGE}
#     driver: bridge

networks:
  zeebe_network:
    driver: bridge
